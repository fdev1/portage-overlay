diff --git a/src/manager/CMakeLists.txt b/src/manager/CMakeLists.txt
index e9183f9..a3e38e2 100644
--- a/src/manager/CMakeLists.txt
+++ b/src/manager/CMakeLists.txt
@@ -35,3 +35,4 @@ install(TARGETS kwalletmanager  ${INSTALL_TARGETS_DEFAULT_ARGS} )
 install( FILES kwalletmanager.rc DESTINATION ${DATA_INSTALL_DIR}/kwalletmanager)
 
 kde4_install_icons( ${ICON_INSTALL_DIR} )
+kde4_install_auth_actions(org.kde.kwallet kwalletmanager.actions)
diff --git a/src/manager/kwalleteditor.cpp b/src/manager/kwalleteditor.cpp
index c2c5cd7..fa6c57b 100644
--- a/src/manager/kwalleteditor.cpp
+++ b/src/manager/kwalleteditor.cpp
@@ -61,6 +61,7 @@
 #include <kicon.h>
 #include <KAction>
 #include <KTreeWidgetSearchLine>
+#include <kauthaction.h>
 
 QAction *KWalletEditor::_newFolderAction =0;
 QAction *KWalletEditor::_deleteFolderAction =0;
@@ -454,6 +455,11 @@ void KWalletEditor::createFolder() {
 }
 
 void KWalletEditor::saveEntry() {
+	KAuth::Action viewAction("org.kde.kwallet.modifydata");
+	KAuth::ActionReply reply = viewAction.execute();
+	if (reply.failed())
+		return;
+
 	int rc = 1;
 	QTreeWidgetItem *item = _displayedItem; //  _entryList->currentItem();
 	_saveChanges->setEnabled(false);
@@ -560,6 +566,7 @@ void KWalletEditor::entrySelectionChanged(QTreeWidgetItem *item) {
                     }
 				} else if (ci->entryType() == KWallet::Wallet::Map) {
 					_entryStack->setCurrentIndex(2);
+					showHideMapEditorValue(false);
 					if (_w->readMap(item->text(0), _currentMap) == 0) {
 						_mapEditor->reload();
 						_entryName->setText(i18n("Name-Value Map: %1", item->text(0)));
@@ -742,6 +749,10 @@ void KWalletEditor::listContextMenuRequested(const QPoint& pos) {
 
 
 void KWalletEditor::copyPassword() {
+	KAuth::Action viewAction("org.kde.kwallet.viewdata");
+	KAuth::ActionReply reply = viewAction.execute();
+	if (reply.failed())
+		return;
 	QTreeWidgetItem *item = _entryList->currentItem();
 	if (_w && item) {
 		QString pass;
@@ -753,8 +764,10 @@ void KWalletEditor::copyPassword() {
 
 
 void KWalletEditor::newEntry() {
+	KAuth::Action viewAction("org.kde.kwallet.modifydata");
+	KAuth::ActionReply reply;
 	QTreeWidgetItem *item = _entryList->currentItem();
-	QString n;
+	QString n = "";
 	bool ok;
 
 	KWalletFolderItem *fi;
@@ -777,7 +790,7 @@ void KWalletEditor::newEntry() {
 	do {
 		n = KInputDialog::getText(i18n("New Entry"),
 				i18n("Please choose a name for the new entry:"),
-				QString(),
+				n,
 				&ok,
 				this);
 
@@ -785,6 +798,13 @@ void KWalletEditor::newEntry() {
 			return;
 		}
 
+		// Authenticate the user and if the password prompt
+		// is closed without authenticating show the dialog again
+		// so that the entry name is not lost
+		reply = viewAction.execute();
+		if (reply.failed()) 
+			continue;
+			
 		// FIXME: prohibits the use of the subheadings
 		if (fi->contains(n)) {
 			int rc = KMessageBox::questionYesNo(this, i18n("Sorry, that entry already exists. Try again?"), QString(), KGuiItem(i18n("Try Again")), KGuiItem(i18n("Do Not Try")));
@@ -860,7 +880,12 @@ void KWalletEditor::listItemChanged(QTreeWidgetItem* item, int column) {
 			i->restoreName();
 			return;
 		}
-
+		KAuth::Action viewAction("org.kde.kwallet.modifydata");
+		KAuth::ActionReply reply = viewAction.execute();
+		if (reply.failed()) {
+			i->restoreName();
+			return;
+		}
 		if (_w->renameEntry(i->name(), t) == 0) {
 			i->setName(t);
 			KWalletContainerItem *ci = dynamic_cast<KWalletContainerItem*>(item->parent());
@@ -887,6 +912,10 @@ void KWalletEditor::deleteEntry() {
 	if (_w && item) {
 		int rc = KMessageBox::warningContinueCancel(this, i18n("Are you sure you wish to delete the item '%1'?", item->text(0)),QString(),KStandardGuiItem::del());
 		if (rc == KMessageBox::Continue) {
+			KAuth::Action viewAction("org.kde.kwallet.modifydata");
+			KAuth::ActionReply reply = viewAction.execute();
+			if (reply.failed())
+				return;
 			KWalletFolderItem *fi = dynamic_cast<KWalletFolderItem *>(item->parent()->parent());
 			if (!fi) {
 				KMessageBox::error(this, i18n("An unexpected error occurred trying to delete the entry"));
@@ -929,13 +958,26 @@ void KWalletEditor::hidePasswordContents() {
 
 
 void KWalletEditor::showPasswordContents() {
-	_entryStack->setCurrentIndex(1);
+	KAuth::Action viewAction("org.kde.kwallet.viewdata");
+	KAuth::ActionReply reply = viewAction.execute();
+	if (!reply.failed()) {
+		_entryStack->setCurrentIndex(1);
+	} else {
+		_alwaysShowContents = false;
+		_alwaysShowContentsAction->setChecked(false);
+	}
 }
 
 
 void KWalletEditor::showHideMapEditorValue(bool show) {
 	if (show) {
-		_mapEditor->showColumn(2);
+		KAuth::Action viewAction("org.kde.kwallet.viewdata");
+		KAuth::ActionReply reply = viewAction.execute();
+		if (!reply.failed()) {
+			_mapEditor->showColumn(2);
+		} else {
+			_mapEditorShowHide->setChecked(false);
+		}
 	} else {
 		_mapEditor->hideColumn(2);
 	}
@@ -956,6 +998,11 @@ void KWalletEditor::importWallet() {
 		return;
 	}
 
+	KAuth::Action viewAction("org.kde.kwallet.modifydata");
+	KAuth::ActionReply reply = viewAction.execute();
+	if (reply.failed())
+		return;
+
 	KWallet::Wallet *w = KWallet::Wallet::openWallet(tmpFile, winId(), KWallet::Wallet::Path);
 	if (w && w->isOpen()) {
 		MergePlan mp = Prompt;
@@ -1112,6 +1159,11 @@ void KWalletEditor::importXML() {
 		return;
 	}
 
+	KAuth::Action viewAction("org.kde.kwallet.modifydata");
+	KAuth::ActionReply reply = viewAction.execute();
+	if (reply.failed())
+		return;
+
 	QDomNode n = top.firstChild();
 	MergePlan mp = Prompt;
 	while (!n.isNull()) {
@@ -1186,75 +1238,79 @@ void KWalletEditor::importXML() {
 
 
 void KWalletEditor::exportXML() {
-	KTemporaryFile tf;
-	tf.open();
-	QXmlStreamWriter xml(&tf);
-	xml.setAutoFormatting(true);
-	xml.writeStartDocument();
-	const QStringList fl = _w->folderList();
+	KUrl url = KFileDialog::getSaveUrl(KUrl(), QLatin1String( "*.xml" ), this);
+	if (!url.isEmpty()) {
 
-	xml.writeStartElement(QLatin1String( "wallet" ));
-	xml.writeAttribute(QLatin1String( "name" ), _walletName);
-	for (QStringList::const_iterator i = fl.constBegin(); i != fl.constEnd(); ++i) {
-		xml.writeStartElement(QLatin1String( "folder" ));
-		xml.writeAttribute(QLatin1String( "name" ), *i);
-		_w->setFolder(*i);
-		QStringList entries = _w->entryList();
-		for (QStringList::const_iterator j = entries.constBegin(); j != entries.constEnd(); ++j) {
-			switch (_w->entryType(*j)) {
-				case KWallet::Wallet::Password:
-					{
-						QString pass;
-						if (_w->readPassword(*j, pass) == 0) {
-							xml.writeStartElement(QLatin1String( "password" ));
-							xml.writeAttribute(QLatin1String( "name" ), *j);
-							xml.writeCharacters(pass);
-							xml.writeEndElement();
+		KAuth::Action viewAction("org.kde.kwallet.exportwallet");
+		KAuth::ActionReply reply = viewAction.execute();
+		if (reply.failed())
+			return;
+
+		KTemporaryFile tf;
+		tf.open();
+		QXmlStreamWriter xml(&tf);
+		xml.setAutoFormatting(true);
+		xml.writeStartDocument();
+		const QStringList fl = _w->folderList();
+
+		xml.writeStartElement(QLatin1String( "wallet" ));
+		xml.writeAttribute(QLatin1String( "name" ), _walletName);
+		for (QStringList::const_iterator i = fl.constBegin(); i != fl.constEnd(); ++i) {
+			xml.writeStartElement(QLatin1String( "folder" ));
+			xml.writeAttribute(QLatin1String( "name" ), *i);
+			_w->setFolder(*i);
+			QStringList entries = _w->entryList();
+			for (QStringList::const_iterator j = entries.constBegin(); j != entries.constEnd(); ++j) {
+				switch (_w->entryType(*j)) {
+					case KWallet::Wallet::Password:
+						{
+							QString pass;
+							if (_w->readPassword(*j, pass) == 0) {
+								xml.writeStartElement(QLatin1String( "password" ));
+								xml.writeAttribute(QLatin1String( "name" ), *j);
+								xml.writeCharacters(pass);
+								xml.writeEndElement();
+							}
+							break;
 						}
-						break;
-					}
-				case KWallet::Wallet::Stream:
-					{
-						QByteArray ba;
-						if (_w->readEntry(*j, ba) == 0) {
-							xml.writeStartElement(QLatin1String( "stream" ));
-							xml.writeAttribute(QLatin1String( "name" ), *j);
-							xml.writeCharacters(QLatin1String( KCodecs::base64Encode(ba) ));
-							xml.writeEndElement();
+					case KWallet::Wallet::Stream:
+						{
+							QByteArray ba;
+							if (_w->readEntry(*j, ba) == 0) {
+								xml.writeStartElement(QLatin1String( "stream" ));
+								xml.writeAttribute(QLatin1String( "name" ), *j);
+								xml.writeCharacters(QLatin1String( KCodecs::base64Encode(ba) ));
+								xml.writeEndElement();
+							}
+							break;
 						}
-						break;
-					}
-				case KWallet::Wallet::Map:
-					{
-						QMap<QString,QString> map;
-						if (_w->readMap(*j, map) == 0) {
-							xml.writeStartElement(QLatin1String( "map" ));
-							xml.writeAttribute(QLatin1String( "name" ), *j);
-							for (QMap<QString,QString>::ConstIterator k = map.constBegin(); k != map.constEnd(); ++k) {
-								xml.writeStartElement(QLatin1String( "mapentry" ));
-								xml.writeAttribute(QLatin1String( "name" ), k.key());
-								xml.writeCharacters(k.value());
+					case KWallet::Wallet::Map:
+						{
+							QMap<QString,QString> map;
+							if (_w->readMap(*j, map) == 0) {
+								xml.writeStartElement(QLatin1String( "map" ));
+								xml.writeAttribute(QLatin1String( "name" ), *j);
+								for (QMap<QString,QString>::ConstIterator k = map.constBegin(); k != map.constEnd(); ++k) {
+									xml.writeStartElement(QLatin1String( "mapentry" ));
+									xml.writeAttribute(QLatin1String( "name" ), k.key());
+									xml.writeCharacters(k.value());
+									xml.writeEndElement();
+								}
 								xml.writeEndElement();
 							}
-							xml.writeEndElement();
+							break;
 						}
+					case KWallet::Wallet::Unknown:
+					default:
 						break;
-					}
-				case KWallet::Wallet::Unknown:
-				default:
-					break;
+				}
 			}
+			xml.writeEndElement();
 		}
-		xml.writeEndElement();
-	}
 
-	xml.writeEndElement();
-	xml.writeEndDocument();
-	tf.flush();
-
-	KUrl url = KFileDialog::getSaveUrl(KUrl(), QLatin1String( "*.xml" ), this);
-
-	if (!url.isEmpty()) {
+		xml.writeEndElement();
+		xml.writeEndDocument();
+		tf.flush();
 		KIO::NetAccess::dircopy(KUrl::fromPath(tf.fileName()), url, this);
 	}
 }
@@ -1268,6 +1324,10 @@ void KWalletEditor::setNewWallet(bool x) {
 void KWalletEditor::saveAs() {
 	KUrl url = KFileDialog::getSaveUrl(KUrl(), QLatin1String( "*.kwl" ), this);
 	if (!url.isEmpty()) {
+		KAuth::Action viewAction("org.kde.kwallet.viewdata");
+		KAuth::ActionReply reply = viewAction.execute();
+		if (reply.failed())
+			return;
 		// Sync() kwalletd
 		if (_nonLocal) {
 			KIO::NetAccess::dircopy(_walletName, url, this);
diff --git a/src/manager/kwalletmanager.actions b/src/manager/kwalletmanager.actions
new file mode 100644
index 0000000..94a3a30
--- /dev/null
+++ b/src/manager/kwalletmanager.actions
@@ -0,0 +1,79 @@
+[Domain]
+Name=KDE Wallet system
+Name[bs]=Sistem KDE novčanika
+Name[ca]=Sistema de carteres del KDE
+Name[ca@valencia]=Sistema de cartera del KDE
+Name[cs]=Systém úschovny pro KDE
+Name[da]=KDE's tegnebogssystem
+Name[de]=Passwortspeicher für KDE
+Name[el]=Σύστημα πορτοφολιού του KDE
+Name[en_GB]=KDE Wallet system
+Name[es]=Sistema de carteras de KDE
+Name[et]=KDE turvalaekasüsteem
+Name[eu]=KDEren zorro sistema
+Name[fi]=KDE:n lompakkojärjestelmä
+Name[fr]=Systèmes de portefeuilles de KDE
+Name[gl]=Sistema de carteiras de KDE
+Name[hu]=KDE jelszókezelő rendszer
+Name[ia]=KDE Wallet  System (Systema de portafolio de KDE)
+Name[it]=Il sistema di portafogli di KDE
+Name[kk]=KDE әмиян жүйесі
+Name[ko]=KDE 지갑 시스템
+Name[nb]=KDEs Lommebok-system
+Name[nds]=KDE-Knippensysteem
+Name[nl]=KDE-portefeuillesysteem
+Name[pa]=KDE ਵਾਲਿਟ ਸਿਸਟਮ
+Name[pl]=System portfela KDE
+Name[pt]=Sistema da Carteira do KDE
+Name[pt_BR]=Sistema de carteiras do KDE
+Name[ro]=Sistemul de portofele KDE
+Name[ru]=Бумажник KDE
+Name[sk]=Systém KDE peňaženky
+Name[sl]=Sistem listnic za KDE
+Name[sr]=КДЕ систем новчаника
+Name[sr@ijekavian]=КДЕ систем новчаника
+Name[sr@ijekavianlatin]=KDE sistem novčanika
+Name[sr@latin]=KDE sistem novčanika
+Name[sv]=KDE:s plånbokssystem
+Name[tr]=KDE Cüzdan Sistemi
+Name[uk]=Система роботи з буферами даних KDE
+Name[x-test]=xxKDE Wallet systemxx
+Name[zh_CN]=KDE 钱包系统
+Name[zh_TW]=KDE 錢包系統
+Icon=kwalletmanager
+
+[org.kde.kwallet.viewdata]
+Name=View saved data
+Name[en_GB]=View saved data
+Name[es]=Ver información guardada en la cartera
+Description=Allow viewing of data saved in wallet
+Description[en_GB]=Allow viewing of data saved in wallet
+Description[es]=Permitir ver la información guardada en la cartera
+Policy=auth_self
+
+[org.kde.kwallet.modifydata]
+Name=Modify saved data
+Name[en_GB]=Modify saved data
+Name[es]=Modificar información guardada en la cartera
+Description=Allow modification of data saved in wallet
+Description[en_GB]=Allow modification of data saved in wallet
+Description[es]=Permitir modificar la información guardada en la cartera
+Policy=auth_self
+
+[org.kde.kwallet.changepass]
+Name=Change wallet password
+Name[en_GB]=Change wallet password
+Name[es]=Cambiar la contraseña de la cartera
+Description=Allow changing wallet password
+Description[en_GB]=Allow changing wallet password
+Description[es]=Permitir cambiar la contraseña de la cartera
+Policy=auth_self
+
+[org.kde.kwallet.exportwallet]
+Name=Export wallet
+Name[en_GB]=Export wallet
+Name[es]=Exportar cartera
+Description=Allow export wallet
+Description[en_GB]=Allow export wallet
+Description[es]=Permitir exportar la cartera
+Policy=auth_self
diff --git a/src/manager/kwalletmanager.cpp b/src/manager/kwalletmanager.cpp
index 553bef9..a3d09ae 100644
--- a/src/manager/kwalletmanager.cpp
+++ b/src/manager/kwalletmanager.cpp
@@ -48,6 +48,7 @@
 #include <kicon.h>
 #include <kactioncollection.h>
 #include <kconfiggroup.h>
+#include <kauthaction.h>
 
 KWalletManager::KWalletManager(QWidget *parent, const char *name, Qt::WFlags f)
     : KXmlGuiWindow(parent, f)
@@ -336,6 +337,11 @@ void KWalletManager::deleteWallet()
     if (rc != KMessageBox::Continue) {
         return;
     }
+    KAuth::Action viewAction("org.kde.kwallet.modifydata");
+    KAuth::ActionReply reply = viewAction.execute();
+    if (reply.failed()) {
+        return;
+    }
     rc = KWallet::Wallet::deleteWallet(walletName);
     if (rc != 0) {
         KMessageBox::sorry(this, i18n("Unable to delete the wallet. Error code was %1.", rc));
diff --git a/src/manager/walletcontrolwidget.cpp b/src/manager/walletcontrolwidget.cpp
index a88cf67..6baf05c 100644
--- a/src/manager/walletcontrolwidget.cpp
+++ b/src/manager/walletcontrolwidget.cpp
@@ -31,6 +31,7 @@
 #include <kmenu.h>
 #include <KTabWidget>
 #include <kdebug.h>
+#include <kauthaction.h>
 
 WalletControlWidget::WalletControlWidget(QWidget* parent, const QString& walletName):
     QWidget(parent),
@@ -161,7 +162,10 @@ void WalletControlWidget::onDisconnectApplication()
 
 void WalletControlWidget::onChangePassword()
 {
-    KWallet::Wallet::changePassword(_walletName, effectiveWinId());
+	KAuth::Action viewAction("org.kde.kwallet.changepass");
+	KAuth::ActionReply reply = viewAction.execute();
+	if (!reply.failed())
+		KWallet::Wallet::changePassword(_walletName, effectiveWinId());
 }
 
 void WalletControlWidget::hideEvent(QHideEvent* )
